name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-riscv-tests:
    name: Build RISC-V Tests
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install RISC-V toolchain
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-riscv64-unknown-elf
    - name: Generate cache key
      id: cache-key
      run: |
        echo "key=riscv-tests-${{ hashFiles('riscv-tests/**') }}" >> $GITHUB_OUTPUT
    - name: Restore RISC-V test binaries cache
      uses: actions/cache/restore@v3
      id: cache-riscv-tests
      with:
        path: riscv-tests-binaries/share/riscv-tests/isa
        key: ${{ steps.cache-key.outputs.key }}
    - name: Build RISC-V tests
      if: steps.cache-riscv-tests.outputs.cache-hit != 'true'
      run: ./scripts/build_riscv_tests.sh
    - name: Save RISC-V test binaries to cache
      if: steps.cache-riscv-tests.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: riscv-tests-binaries/share/riscv-tests/isa
        key: ${{ steps.cache-key.outputs.key }}
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Test RISC-V binaries with emulator
      run: ./scripts/test.sh
    - name: Upload test results as artifacts
      uses: actions/upload-artifact@v4
      if: always()  # Upload artifacts even if tests fail
      with:
        name: riscv-test-results-build-job
        path: logs/
        retention-days: 30

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build-riscv-tests
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Restore RISC-V test binaries
      uses: actions/cache@v3
      with:
        path: riscv-tests-binaries/share/riscv-tests/isa
        key: ${{ needs.build-riscv-tests.outputs.cache-key }}
        fail-on-cache-miss: true
    - name: Run unit tests
      run: cargo test --verbose
    - name: Run integration tests
      run: ./scripts/test.sh
    - name: Upload test results as artifacts
      uses: actions/upload-artifact@v4
      if: always()  # Upload artifacts even if tests fail
      with:
        name: riscv-test-results
        path: logs/
        retention-days: 30

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - name: Run clippy
      run: cargo clippy -- -D warnings

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: Check formatting
      run: cargo fmt --check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Build
      run: cargo build --verbose